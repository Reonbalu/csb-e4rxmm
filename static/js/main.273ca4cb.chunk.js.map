{"version":3,"sources":["ConfirmationDialog.jsx","DeleteButton.jsx","App.tsx","index.tsx"],"names":["ConfirmationDialogContext","createContext","ConfirmationDialogProvider","children","useState","dialogOpen","setDialogOpen","dialogConfig","setDialogConfig","resetDialog","Provider","value","openDialog","title","message","onChange","actionCallback","console","log","open","onConfirm","onDismiss","ConfirmationDialog","text","setText","executeDismiss","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","onClick","color","variant","type","e","target","DeleteButton","getConfirmation","useContext","options","Promise","res","useConfirmationDialog","data","setdata","a","alert","App","className","rootElement","document","getElementById","render"],"mappings":"yOAQMA,EAA4BC,wBAAc,IAE1CC,EAA6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpC,EAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KASMC,EAAc,WAClBH,GAAc,GACdE,EAAgB,KAclB,OACE,eAACR,EAA0BU,SAA3B,CAAoCC,MAAO,CAAEC,WAxB5B,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,eAC9CC,QAAQC,IAAI,8BAA+BZ,GAC3CW,QAAQC,IAAI,2BAA4Bb,GACxCC,GAAc,GACdE,EAAgB,CAAEK,QAAOC,UAASC,WAAUC,qBAoB5C,UACE,cAAC,EAAD,CACEG,KAAMd,EACNQ,MAAK,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAcM,MACrBC,QAAO,OAAEP,QAAF,IAAEA,OAAF,EAAEA,EAAcO,QACvBM,UAjBY,WAChBX,IAEAF,EAAaS,gBAAe,IAexBK,UAZY,WAChBZ,IACAF,EAAaS,gBAAe,IAWxBD,SAAQ,OAAER,QAAF,IAAEA,OAAF,EAAEA,EAAcQ,WAEzBZ,MAKDmB,EAAqB,SAAC,GAOrB,IANLH,EAMI,EANJA,KACAN,EAKI,EALJA,MACAC,EAII,EAJJA,QACAM,EAGI,EAHJA,UACAC,EAEI,EAFJA,UACAN,EACI,EADJA,SAEA,EAAwBX,qBAAxB,mBAAOmB,EAAP,KAAaC,EAAb,KAKMC,EAAiB,WACrBV,EAAS,IACTM,KAEF,OACE,eAACK,EAAA,EAAD,CAAQP,KAAMA,EAAMQ,QAASF,EAA7B,UACE,cAACG,EAAA,EAAD,UAAcf,IACd,cAACgB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UAAoBhB,MAEtB,eAACiB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,QAASR,EAAjB,oBACA,cAACO,EAAA,EAAD,CAAQE,MAAM,UAAUC,QAAQ,YAAYF,QAhB3B,WACrBlB,EAASQ,GACTH,KAcI,qBAGA,uBACEgB,KAAK,OACLzB,MAAOY,EACPR,SAAU,SAACsB,GAAD,OAAOb,EAAQa,EAAEC,OAAO3B,iB,yBC/E/B4B,EAAe,WAC1B,IAAQC,EDqFoB,WAC5B,IAAQ5B,EAAe6B,qBAAWzC,GAA1BY,WAOR,MAAO,CAAE4B,gBALe,SAAC,GAAD,IAAME,EAAN,2BACtB,IAAIC,SAAQ,SAACC,GACXhC,EAAW,aAAEI,eAAgB4B,GAAQF,SC1FbG,GAApBL,gBACR,EAAwBpC,qBAAxB,mBAAO0C,EAAP,KAAaC,EAAb,KAEMd,EAAO,uCAAG,sBAAAe,EAAA,sEACUR,EAAgB,CACtC3B,MAAO,aACPC,QAAS,oBACTC,SAAUgC,IAJE,eAOCE,MAAM,kDAPP,2CAAH,qDAUb,OACE,qCACE,cAACjB,EAAA,EAAD,CAAQG,QAAQ,YAAYD,MAAM,UAAUD,QAASA,EAArD,oBAGA,uBACEG,KAAK,OACLzB,MAAOmC,EACP/B,SAAU,SAACsB,GAAD,OAAOU,EAAQV,EAAEC,OAAO3B,cCtB3B,SAASuC,IACtB,OACE,cAAC,EAAD,UACE,sBAAKC,UAAU,MAAf,UACE,mDACA,yEACA,cAAC,EAAD,SCNR,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,iBAAO,cAACL,EAAD,IAASE,K","file":"static/js/main.273ca4cb.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst ConfirmationDialogContext = createContext({});\r\n\r\nconst ConfirmationDialogProvider = ({ children }) => {\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [dialogConfig, setDialogConfig] = useState({});\r\n\r\n  const openDialog = ({ title, message, onChange, actionCallback }) => {\r\n    console.log(\"openDialog -> setDialogOpen\", setDialogOpen);\r\n    console.log(\"openDialog -> dialogOpen\", dialogOpen);\r\n    setDialogOpen(true);\r\n    setDialogConfig({ title, message, onChange, actionCallback });\r\n  };\r\n\r\n  const resetDialog = () => {\r\n    setDialogOpen(false);\r\n    setDialogConfig({});\r\n  };\r\n\r\n  const onConfirm = () => {\r\n    resetDialog();\r\n\r\n    dialogConfig.actionCallback(true);\r\n  };\r\n\r\n  const onDismiss = () => {\r\n    resetDialog();\r\n    dialogConfig.actionCallback(false);\r\n  };\r\n\r\n  return (\r\n    <ConfirmationDialogContext.Provider value={{ openDialog }}>\r\n      <ConfirmationDialog\r\n        open={dialogOpen}\r\n        title={dialogConfig?.title}\r\n        message={dialogConfig?.message}\r\n        onConfirm={onConfirm}\r\n        onDismiss={onDismiss}\r\n        onChange={dialogConfig?.onChange}\r\n      />\r\n      {children}\r\n    </ConfirmationDialogContext.Provider>\r\n  );\r\n};\r\n\r\nconst ConfirmationDialog = ({\r\n  open,\r\n  title,\r\n  message,\r\n  onConfirm,\r\n  onDismiss,\r\n  onChange\r\n}) => {\r\n  const [text, setText] = useState();\r\n  const executeConfirm = () => {\r\n    onChange(text);\r\n    onConfirm();\r\n  };\r\n  const executeDismiss = () => {\r\n    onChange(\"\");\r\n    onDismiss();\r\n  };\r\n  return (\r\n    <Dialog open={open} onClose={executeDismiss}>\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>{message}</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={executeDismiss}>Cancel</Button>\r\n        <Button color=\"primary\" variant=\"contained\" onClick={executeConfirm}>\r\n          Confirm\r\n        </Button>\r\n        <input\r\n          type=\"text\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst useConfirmationDialog = () => {\r\n  const { openDialog } = useContext(ConfirmationDialogContext);\r\n\r\n  const getConfirmation = ({ ...options }) =>\r\n    new Promise((res) => {\r\n      openDialog({ actionCallback: res, ...options });\r\n    });\r\n\r\n  return { getConfirmation };\r\n};\r\n\r\nexport default ConfirmationDialog;\r\nexport { ConfirmationDialogProvider, useConfirmationDialog };\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useConfirmationDialog } from \"./ConfirmationDialog\";\r\n\r\nexport const DeleteButton = () => {\r\n  const { getConfirmation } = useConfirmationDialog();\r\n  const [data, setdata] = useState();\r\n\r\n  const onClick = async () => {\r\n    const confirmed = await getConfirmation({\r\n      title: \"Attention!\",\r\n      message: \"OMG are you sure?\",\r\n      onChange: setdata\r\n    });\r\n\r\n    if (confirmed) alert(\"A Møøse once bit my sister... No realli!\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={onClick}>\r\n        Delete\r\n      </Button>\r\n      <input\r\n        type=\"text\"\r\n        value={data}\r\n        onChange={(e) => setdata(e.target.value)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import \"./styles.css\";\nimport { ConfirmationDialogProvider } from \"./ConfirmationDialog\";\nimport { DeleteButton } from \"./DeleteButton\";\n\nexport default function App() {\n  return (\n    <ConfirmationDialogProvider>\n      <div className=\"App\">\n        <h1>Hello CodeSandbox</h1>\n        <h2>Start editing to see some magic happen!</h2>\n        <DeleteButton />\n      </div>\n    </ConfirmationDialogProvider>\n  );\n}\n","import { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}